# -*- coding: utf-8 -*-
"""EX6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T6LwuSZuR_CEVDxChi1pNoAOKFnejIdE
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_classification
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.preprocessing import StandardScaler

# Step 1: Generate synthetic dataset
X, y = make_classification(n_samples=200, n_features=5, n_informative=3, n_redundant=2,
                           n_classes=3, n_clusters_per_class=1, random_state=42)

# Step 2: Standardize the dataset (LDA assumes data is standardized)
scaler = StandardScaler()
X = scaler.fit_transform(X)



# Step 3: Apply LDA for dimensionality reduction
lda = LinearDiscriminantAnalysis(n_components=2)  # Project to 2 dimensions
X_lda = lda.fit_transform(X, y)

# Step 4: Visualize the data in the reduced dimensions
plt.figure(figsize=(8, 6))
plt.scatter(X_lda[:, 0], X_lda[:, 1], c=y, cmap='viridis', edgecolor='k', s=60)
plt.xlabel('LDA Component 1')
plt.ylabel('LDA Component 2')
plt.title('LDA on Synthetic Data')
plt.colorbar(label='Class Label')
plt.show()



