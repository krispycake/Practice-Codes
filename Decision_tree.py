# -*- coding: utf-8 -*-
"""EX9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cmMy4hWyTpjzeJ6rOiuXWcFAKWXmu4vw
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_classification
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
from sklearn import datasets


# Iris Dataset Example
# Step 1: Load the Iris dataset
iris = datasets.load_iris()
x_iris, y_iris = iris.data, iris.target

# Step 2: Split the Iris dataset into training and testing sets
x_train_iris, x_test_iris, y_train_iris, y_test_iris = train_test_split(
    x_iris, y_iris, test_size=0.2, random_state=42
)

# Step 3: Initialize and train the Decision Tree Classifier for Iris data
decision_tree_iris = DecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=42)
decision_tree_iris.fit(x_train_iris, y_train_iris)

# Step 4: Evaluate the Iris data model
accuracy_iris = decision_tree_iris.score(x_test_iris, y_test_iris)
print(f"Accuracy of Decision Tree Classifier on Iris dataset: {accuracy_iris * 100:.2f}%")

# Step 5: Visualize the Decision Tree for Iris data
plt.figure(figsize=(12, 8))
plot_tree(decision_tree_iris, feature_names=iris.feature_names, class_names=iris.target_names)
plt.title("Decision Tree Visualization for Iris Dataset")
plt.show()



# Step 3: Initialize and train the Decision Tree Classifier
decision_tree = DecisionTreeClassifier(criterion='log_loss',max_depth=3, random_state=42)
decision_tree.fit(x_train, y_train)

# Step 4: Evaluate the model
accuracy = decision_tree.score(x_test, y_test)
print(f"Accuracy of Decision Tree Classifier: {accuracy * 100:.2f}%")

# Step 5: Visualize the Decision Tree
plt.figure(figsize=(12, 8))
plot_tree(decision_tree)
plt.title("Decision Tree Visualization")
plt.show()

